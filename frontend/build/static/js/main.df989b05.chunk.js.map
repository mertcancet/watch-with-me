{"version":3,"sources":["Components/Chat.js","Components/VideoScreen.js","App.js","index.js"],"names":["socket","io","connect","transports","Chat","useState","message","setMessage","chat","setChat","useEffect","on","className","map","index","key","onSubmit","e","preventDefault","emit","type","value","onChange","target","VideoScreen","currentTime","setCurrentTime","player","setPlayer","duration","setDuration","timeBarRounded","timeBar","Math","round","videoId","opts","height","width","playerVars","controls","disablekb","modestbranding","rel","autoplay","onReady","event","playVideo","getDuration","setInterval","getCurrentTime","seekTo","console","log","pauseVideo","onPlay","onStateChange","playVideoAt","onPause","name","min","max","current","onClick","App","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df989b05.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport '../styles/_chat.css';\r\n\r\nconst socket = io.connect('localhost:5000', { transports: ['websocket'] });\r\n\r\nconst Chat = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [chat, setChat] = useState([]);\r\n  useEffect(() => {\r\n    socket.on('chat message', (message) => {\r\n      setChat([...chat, message]);\r\n    });\r\n  });\r\n  const chatHandler = (e) => {\r\n    e.preventDefault();\r\n    socket.emit('chat message', message);\r\n    setMessage('');\r\n  };\r\n  return (\r\n    <div className='chatbox'>\r\n      <div className='chatbox__chat scroll'>\r\n        {chat.map((message, index) => (\r\n          <div key={index} className='chatbox__chat__index'>\r\n            <>{message}</>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={chatHandler} className='chatbox__form '>\r\n        <input\r\n          className='chatbox__form__input bg-whit-700 border text-orange-500 py-2 px-2 leading-bold focus:outline-none w-4/6 mr-5'\r\n          type='text'\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n        />\r\n        <button\r\n          className='bg-white900  hover:bg-orange-500 text-orange-500 font-semibold hover:text-white py-2 px-2 ml-5 border border-black-700 hover:border-transparent rounded w-1/6'\r\n          type='submit'\r\n        >\r\n          GÃ¶nder\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React, { useState, useEffect } from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport io from 'socket.io-client';\r\nimport '../styles/_videoScreen.css';\r\n\r\nconst socket = io.connect('localhost:5000', { transports: ['websocket'] });\r\n\r\nexport const VideoScreen = () => {\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [player, setPlayer] = useState({});\r\n  const [duration, setDuration] = useState();\r\n\r\n  useEffect(() => {});\r\n  const opts = {\r\n    height: '480',\r\n    width: '720',\r\n    playerVars: {\r\n      controls: 0,\r\n      disablekb: 0,\r\n      modestbranding: 1,\r\n      rel: 0,\r\n      autoplay: 0,\r\n    },\r\n  };\r\n  //BUTTONS\r\n  const pauseHandler = () => {\r\n    socket.emit('pause');\r\n    player.pauseVideo();\r\n  };\r\n  const playHandler = () => {\r\n    socket.emit('play');\r\n    player.playVideo();\r\n  };\r\n\r\n  //react-youtube functions\r\n\r\n  const timeBarHandler = (e) => {\r\n    player.pauseVideo();\r\n    let time = e.target.value;\r\n    let current = (time * duration) / 10000;\r\n    player.seekTo(current);\r\n    player.playVideo();\r\n    socket.emit('current time', current);\r\n  };\r\n  const videoOnReady = (event) => {\r\n    // access to player in all event handlers via event.target\r\n    const player = event.target;\r\n    player.playVideo();\r\n    setPlayer(player);\r\n    setDuration(player.getDuration());\r\n    setInterval(() => {\r\n      setCurrentTime(player.getCurrentTime());\r\n      socket.on('current time', (currentTime) => {\r\n        player.seekTo(currentTime);\r\n        player.playVideo();\r\n        console.log('selam');\r\n      });\r\n      socket.on('play', () => {\r\n        player.playVideo();\r\n      });\r\n      socket.on('pause', () => {\r\n        player.pauseVideo();\r\n      });\r\n    }, 1000);\r\n  };\r\n  const videoOnPlay = (event) => {\r\n    setCurrentTime(event.target.getCurrentTime());\r\n  };\r\n\r\n  const videoOnStateChange = (event) => {\r\n    const player = event.target;\r\n    setCurrentTime(event.target.getCurrentTime());\r\n\r\n    player.playVideoAt(currentTime);\r\n  };\r\n\r\n  const videoOnPause = (event) => {\r\n   setCurrentTime(event.target.getCurrentTime());\r\n  };\r\n\r\n\r\n  let timeBar = (currentTime / duration) * 10000;\r\n  let timeBarRounded = 0;\r\n  timeBarRounded = Math.round(timeBar);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <YouTube\r\n          className='rounded'\r\n          videoId='3m07zMRXXP0'\r\n          opts={opts}\r\n          onReady={videoOnReady}\r\n          onPlay={videoOnPlay}\r\n          onStateChange={videoOnStateChange}\r\n          onPause={videoOnPause}\r\n        />\r\n      </div>\r\n\r\n      <input\r\n        className='mt-2'\r\n        type='range'\r\n        name='currentTime'\r\n        min={1}\r\n        max={10000}\r\n        value={timeBarRounded}\r\n        onChange={timeBarHandler}\r\n      />\r\n      <br />\r\n      <button\r\n        className='m-2 bg-white hover:bg-orange-500 text-orange-500 font-semibold hover:text-white py-2 px-4 border border-black-700 hover:border-transparent rounded'\r\n        onClick={playHandler}\r\n      >\r\n        Play\r\n      </button>\r\n      <button\r\n        className='m-2 bg-white hover:bg-orange-500 text-orange-500 font-semibold hover:text-white py-2 px-4 border border-black-700 hover:border-transparent rounded'\r\n        onClick={pauseHandler}\r\n      >\r\n        Pause\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport Chat from './Components/Chat';\r\nimport { VideoScreen } from './Components/VideoScreen';\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className='bg-white-900'>\r\n        <div className=' container mx-auto p-4 '>\r\n          <div className='max-w-xxl  rounded overflow-hidden shadow-lg p-2 border-solid border-2 border-gray-600 bg-white-800'>\r\n            <VideoScreen className='my-auto' />\r\n            <Chat />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './assets/main.css';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}